Pre-spring break TODO:

Now try to get basic line following working, and work on really doing
more mobile robotics stuff, as well as CV stuff.
	Camera working! CV installed.

Also get the joystick to work in the correct direction
	Done

Meet with cheever either this week or next to make new circuit
	Sent email
	1pm meeting today --> circuit now works!
	
Install ROS
	ROS Kinetic on ARM processor: wiki.ros.org/kinetic/Installation/Ubuntu
	(Only package not installed was ros-kinetic-roslz)
	Stepping through tutorials now

Space problem in the odroid? Running out of room after ROS install
	156 992 opencv
	99 816 opencv-contib
	5 756 DOcuments
	600 Downloads
	77 336 opencv.zip
	53 896 opencv_contrib.zip
	487 328 /home/odroid
	--> ways to save space:
		* delete the .zip files
		* sudo apt-get clean helps free some space of Ubuntu downloads
		* sudo apt-get remove <thing to remove>


---------------------------------------------

debugging with Matt:

helpful with hex and binary commands

the servotest and the maestro controller both work
the script was running alright, but commented-out driver section was the problem

---------------------------------------------------

git commands:
	Odroid push/pull:
		origin = 'myorigin', branch = 'master'
		git pull myorigin master
		git push myorigin
		...everything else is the same

	Hermes push/pull as usual 

-------------------------------------------------------
Post spring break week TODO:

Make a node that accepts commands (throttle and steering)
	Listens to command of steering angle and throttle from controller
	Essentially will redo the project_server client, and network_controller except with Nodes in ROS all on the Odroid

One node controlling car, another node listening to joystick and publishing the axis info

Change password for odroid

play with camera, line detection and line following
Joystick working with ROS
	Python node to listen to joystick throttle and steering commands and sends along to motors

Replace contoller with wireless controller
	Done

--------------------------------------------------------
Unix commands

df -h: memory check in MB
. ~/catkin_ws/devel/setup.bash: sources the bash to current terminal
lsmod: see all the drivers and modules in the system 
dmesg: see all things plugged into the computer
dmesg | grep -i tty: seaches the dmesg space for the "tty" string
apt-cache search - search for libs and packages

---------------------------------------------------------
Problems:

can listen to one another :)
issue when try to write to servo controller
	publishes steering on 20 second delay when line writing to the controller is active:
		self.controller.setAngle(0, steering)
	Writing to the actual controller
issue when writing to setPosition script:
	"int() argument must be a string or a number, not 'String'"
	"float" vs "Float64"
	Types converted between python and ROS std_msgs
got rid of issue when the pygame module prints debugging messages to the console
	Commented out the stuff in C, and compiled it from source

--------------------------------------------------------
send one message with both steering and throttle
	define own message type
	existing message type from ROS
	** Done
		FIxed via custom message, int32 and int32

blob finder software installed on Odroid
ROS cv camera reading the camera and publishing the image as a topic
	after that, line following like normal

Line folliwing working 

Prime Sense drivers on the Odroid
1.09 vs 1.08 specs
	1.09 is short range
	roslaunch openni2_launch openni2.launch

Killswitch also!


